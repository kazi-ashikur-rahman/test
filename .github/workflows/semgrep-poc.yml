name: Semgrep PR Scan with Comment

on:
  pull_request:
    branches:
      - main
      - stg
      - dev

jobs:
  semgrep:
    runs-on: ubuntu-latest
    environment: SEMGREP  # environment where SEMGREP_APP_TOKEN is set
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for diff scans

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Semgrep
        run: python -m pip install --upgrade pip semgrep

      - name: Run Semgrep diff scan (JSON output)
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
          BASE_BRANCH: ${{ github.event.pull_request.base.ref }}
        run: |
          git fetch origin $BASE_BRANCH
          semgrep ci --config=auto --json --output semgrep-report.json

      - name: Build Markdown summary
        run: |
          python - <<'PY'
          import json

          def pick(d, *keys):
              for k in keys:
                  if k in d and d[k] is not None:
                      return d[k]
              return None

          report = {}
          try:
              report = json.load(open('semgrep-report.json'))
          except Exception as e:
              open('semgrep_report.md','w').write("❗ Failed to read semgrep output: "+str(e))
              raise

          results = report.get('results', []) or []
          if not results:
              md = "✅ **Semgrep:** No new issues found in this PR.\n"
          else:
              lines = []
              for r in results:
                  extra = r.get('extra', {}) if isinstance(r.get('extra', {}), dict) else {}
                  rule = pick(r, 'check_id', 'rule_id', 'rule') or 'unknown'
                  message = pick(extra, 'message') or r.get('message','').strip()
                  path = pick(r, 'path') or (r.get('start') or {}).get('path') or 'unknown'
                  line = (r.get('start') or {}).get('line') or (extra.get('start') or '')
                  severity = (extra.get('severity') or r.get('severity') or 'INFO').upper()
                  lines.append(f"- **{severity}** `{rule}` — `{path}:{line}` — {message}")

              header = f"🚨 **Semgrep PR Scan Result:** Found **{len(results)}** potential issue(s)\n\n"
              md = header + "\n".join(lines)

          open('semgrep_report.md','w').write(md)
          print(md)
          PY

      - name: Post or update PR comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-path: semgrep_report.md
